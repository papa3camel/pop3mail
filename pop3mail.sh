#!/bin/sh

#------------------------------------------------------------------------------
#
#    システム名     :   医療情報システム
#
#    サブシステム名 :   院内メールシステム
#
#    プログラム名   :   pop3mail
#
#    モジュール名   :   pop3mail.sh
#
#    処理内容       :   POP3サーバからメール受信
#
#    注意事項       :
#
#    作成日(担当者) :   2018/06/08(山脇)
#    修正日(担当者) :
#
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
#   関数宣言
#------------------------------------------------------------------------------
FUNC=/usr/local/bin/functions.sh
if [ -f ${FUNC} ];then
    . ${FUNC}
fi

#------------------------------------------------------------------------------
#   初期設定
#------------------------------------------------------------------------------
#---------------------------------------
#   定数定義
#---------------------------------------
# コマンドパス
PYTHON=/usr/bin/python
POP3MAIL=/usr/local/bin/pop3mail.py

# ログファイルパス
LOG_PATH=/tmp/
# PIDファイルパス
PID_PATH=/var/tmp/

# POP3サーバ
HOSTNM=dns.almeida.oita.med.or.jp

# ユーザ名
USERID=$1
# パスワード
PASSWD=$2


#------------------------------------------------------------------------------
#
#    関数名 : main
#
#    内  容 : 主処理
#
#    引  数 : なし
#
#    戻り値 : なし
#
#------------------------------------------------------------------------------
function main() {
    #---------------------------------------
    #   入力チェック
    #---------------------------------------
    # 引数(変換元メールボックス形式)チェック
    if [ "${USERID}" == "" ] || [ "${PASSWD}" == "" ]; then
        echo "Usage: pop3mail.sh [userid] [password]"
        exit -1
    fi

    #---------------------------------------
    #   POP3メール受信
    #---------------------------------------
    # POP3メールの受信
    ${PYTHON} ${POP3MAIL} -H ${HOSTNM} -u ${USERID} -p ${PASSWD} >> ${LOG_PATH}${USERID} 2>&1

    # 正常終了
    return 0
}

#------------------------------------------------------------------------------
#   プログラム実行
#------------------------------------------------------------------------------
# PIDファイル
PIDFILE=${PID_PATH}${USERID}.pid

# プロセス実行中の判定
check_pid ${PIDFILE}
if [ $? -eq 0 ];then
    # PIDファイルの作成
    echo $$ > ${PIDFILE}

    # 主処理
    main

    # PIDファイルの削除
    rm -f ${PIDFILE}
fi

# 正常終了
exit 0

#------------------------------------------------------------------------------
